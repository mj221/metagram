{"version":3,"sources":["serviceWorker.js","index.js","components/App.js","components/Navbar.js","mglogo.png","components/Main.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","metaGram","ipfs","require","ipfsClient","host","port","protocol","props","_this","Object","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","captureFile","event","preventDefault","file","target","files","fileType","type","split","setState","fileFormat","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","console","log","state","uploadImage","description","add","error","loading","methods","hash","send","from","account","on","catch","tipImageOwner","id","tipAmount","value","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee5","wrap","_context5","prev","next","stop","sortPosts","_ref3","_callee6","sortState","_context6","images","sort","b","filter","author","includes","_x3","apply","arguments","authorPosts","_ref4","_callee7","authorHash","i","image","_image","_context7","imageCount","sent","imagesAlt","concat","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","userPostState","_x4","detectEthereumProvider","ethereum","sendAsync","method","params","jsonrpc","Date","getTime","_ref","_callee","_context","_this2","loadWeb3","loadBlockchainData","_x","_x2","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","metaData","MetaGram","networks","Contract","abi","address","content","react__WEBPACK_IMPORTED_MODULE_8___default","_Main__WEBPACK_IMPORTED_MODULE_14__","bind","_Navbar__WEBPACK_IMPORTED_MODULE_13__","style","height","className","react_loadingg__WEBPACK_IMPORTED_MODULE_16__","Component","Navbar","react__WEBPACK_IMPORTED_MODULE_7___default","href","rel","src","mgLogo","alt","Fragment","width","Identicon","toString","onClick","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","abrupt","color","module","exports","__webpack_require__","p","Main","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_minjaelee_Documents_ERC_20_code_metagram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","show","showPicModal","eventKey","currentAuthor","fabVisible","playVideo","theme","identiconStyle","borderRadius","overflow","borderWidth","borderColor","react__WEBPACK_IMPORTED_MODULE_5___default","background","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_7__","left","bottom","position","aria-label","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_Home__WEBPACK_IMPORTED_MODULE_9___default","right","size","scrollTo","top","behavior","_material_ui_icons_ArrowDropUp__WEBPACK_IMPORTED_MODULE_10___default","assign","react_bootstrap__WEBPACK_IMPORTED_MODULE_14__","onHide","aria-labelledby","centered","Header","closeButton","Title","onSubmit","imageDescription","Body","accept","onChange","ref","input","placeholder","required","Footer","react_bootstrap__WEBPACK_IMPORTED_MODULE_15__","variant","role","maxWidth","justifyContent","react_bootstrap__WEBPACK_IMPORTED_MODULE_16__","Toggle","Menu","map","option","Item","key","onSelect","contentFormat","imageHash","onMouseOver","cursor","format","react_lazy_load_image_component__WEBPACK_IMPORTED_MODULE_11__","effect","react_lazyload__WEBPACK_IMPORTED_MODULE_12___default","controls","utils","fromWei","name","toWei"],"mappings":"mhBAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,g3uLEpHfC,uLAFEC,EADaC,EAAQ,IACdC,CAAW,CAACC,KAAM,iBAAkBC,KAAM,KAAMC,SAAU,UAIjEf,cAkLJ,SAAAA,EAAYgB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAApB,IACjBiB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAlB,GAAAuB,KAAAH,KAAMJ,KAzGRQ,YAAc,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAAOC,MAAM,GAG5BC,EAAWH,EAAKI,KAAKC,MAAM,KAAK,GACpCf,EAAKgB,SAAS,CAACC,WAAYJ,IAE3B,IAAMK,EAAS,IAAI5C,OAAO6C,WAC1BD,EAAOE,kBAAkBV,GAEzBQ,EAAOG,UAAY,WACjBrB,EAAKgB,SAAS,CAACM,OAAQC,EAAOL,EAAOM,UACrCC,QAAQC,IAAI,SAAU1B,EAAK2B,MAAML,UA2FlBtB,EAvFnB4B,YAAc,SAACC,GACbJ,QAAQC,IAAI,2BACZjC,EAAKqC,IAAI9B,EAAK2B,MAAML,OAAQ,SAACS,EAAOP,GAClCC,QAAQC,IAAI,cAAeF,GACxBO,EACDN,QAAQM,MAAMA,IAGhB/B,EAAKgB,SAAS,CAACgB,SAAS,IACxBhC,EAAK2B,MAAMnC,SAASyC,QAAQL,YAAYJ,EAAO,GAAGU,KAAML,EAAa7B,EAAK2B,MAAMV,YACnDkB,KAAK,CAACC,KAAMpC,EAAK2B,MAAMU,UACvBC,GAAG,eAAgB,SAACJ,GACnBlC,EAAKgB,SAAS,CAACgB,SAAS,MACvBO,MAAM,SAACR,GACR/B,EAAKgB,SAAS,CAACgB,SAAS,IACxBP,QAAQC,IAAIK,SAwE3B/B,EAnEnBwC,cAAgB,SAACC,EAAIC,GACnB1C,EAAKgB,SAAS,CAACgB,SAAS,IACxBhC,EAAK2B,MAAMnC,SAASyC,QAAQO,cAAcC,GACbN,KAAK,CAACC,KAAMpC,EAAK2B,MAAMU,QAAUM,MAAOD,IACxCJ,GAAG,eAFhCrC,OAAA2C,EAAA,EAAA3C,CAAA4C,EAAAhE,EAAAiE,KAEgD,SAAAC,IAAA,OAAAF,EAAAhE,EAAAmE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElBnD,EAAKgB,SAAS,CAACgB,SAAS,IAFN,wBAAAiB,EAAAG,SAAAL,OAIjBR,MAAM,SAACR,GACR/B,EAAKgB,SAAS,CAACgB,SAAS,OA0DrChC,EAvDnBqD,UAuDmB,eAAAC,EAAArD,OAAA2C,EAAA,EAAA3C,CAAA4C,EAAAhE,EAAAiE,KAvDP,SAAAS,EAAOC,GAAP,OAAAX,EAAAhE,EAAAmE,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,OACVnD,EAAKgB,SAAS,CAACgB,SAAS,IAEN,aAAdwB,EACFxD,EAAKgB,SAAS,CAAC0C,OAAQ1D,EAAK2B,MAAM+B,OAAOC,KAAK,SAAC9E,EAAE+E,GAAH,OAAS/E,EAAE4D,GAAKmB,EAAEnB,OAC3C,WAAde,EACPxD,EAAKgB,SAAS,CAAC0C,OAAQ1D,EAAK2B,MAAM+B,OAAOC,KAAK,SAAC9E,EAAE+E,GAAH,OAASA,EAAEnB,GAAK5D,EAAE4D,OAC3C,gBAAde,EACPxD,EAAKgB,SAAS,CACZ0C,OAAQ1D,EAAK2B,MAAM+B,OAAOC,KAAK,SAAC9E,EAAE+E,GAAH,OAASA,EAAElB,UAAY7D,EAAE6D,cAErC,iBAAdc,EACPxD,EAAKgB,SAAS,CACZ0C,OAAQ1D,EAAK2B,MAAM+B,OAAOC,KAAK,SAAC9E,EAAE+E,GAAH,OAAS/E,EAAE6D,UAAYkB,EAAElB,cAErC,YAAdc,GAEPxD,EAAKgB,SAAS,CACZ0C,OAAQ1D,EAAK2B,MAAM+B,OAAOG,OAAO,SAAAhF,GAAC,OAAIA,EAAEiF,OAAOC,SAAS/D,EAAK2B,MAAMU,aAIvErC,EAAKgB,SAAS,CAACgB,SAAS,IAtBd,wBAAAyB,EAAAL,SAAAG,MAuDO,gBAAAS,GAAA,OAAAV,EAAAW,MAAA9D,KAAA+D,YAAA,GAAAlE,EA9BnBmE,YA8BmB,eAAAC,EAAAnE,OAAA2C,EAAA,EAAA3C,CAAA4C,EAAAhE,EAAAiE,KA9BL,SAAAuB,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAA,OAAA5B,EAAAhE,EAAAmE,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,UACZnD,EAAKgB,SAAS,CAACgB,SAAS,IACL,SAAfsC,EAFQ,CAAAI,EAAAvB,KAAA,SAIDoB,EAAI,EAJH,YAIMA,GAAIvE,EAAK2B,MAAMgD,YAJrB,CAAAD,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,EAKY3D,EAASyC,QAAQyB,OAAOa,GAAGjE,OALvC,OAKFkE,EALEE,EAAAE,KAMR5E,EAAKgB,SAAS,CAAC6D,UAAS,GAAAC,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAMD,EAAK2B,MAAMkD,WAAjB,CAA4BL,MAN5C,OAIiCD,IAJjCG,EAAAvB,KAAA,gBAQVnD,EAAKgB,SAAS,CAACgE,eAAe,IAC9BhF,EAAKgB,SAAS,CAAC0C,OAAQ1D,EAAK2B,MAAMkD,YAClC7E,EAAKgB,SAAS,CAAC6D,UAAW,KAE1B7E,EAAKgB,SAAS,CAAC0C,OAAQ1D,EAAK2B,MAAM+B,OAAOC,KAAK,SAAC9E,EAAE+E,GAAH,OAASA,EAAEnB,GAAK5D,EAAE4D,OAZtDiC,EAAAvB,KAAA,oBAeNmB,IAAetE,EAAK2B,MAAMU,QAfpB,CAAAqC,EAAAvB,KAAA,SAgBCoB,EAAI,EAhBL,aAgBQA,GAAIvE,EAAK2B,MAAMgD,YAhBvB,CAAAD,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,GAiBc3D,EAASyC,QAAQyB,OAAOa,GAAGjE,OAjBzC,QAiBAkE,EAjBAE,EAAAE,KAkBN5E,EAAKgB,SAAS,CAAC6D,UAAS,GAAAC,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAMD,EAAK2B,MAAMkD,WAAjB,CAA4BL,MAlB9C,QAgBmCD,IAhBnCG,EAAAvB,KAAA,iBAoBRnD,EAAKgB,SAAS,CAACgE,eAAe,IAC9BhF,EAAKgB,SAAS,CAAC0C,OAAQ1D,EAAK2B,MAAMkD,YAClC7E,EAAKgB,SAAS,CAAC6D,UAAW,KAtBlB,QAwBV7E,EAAKgB,SAAS,CACZ0C,OAAQ1D,EAAK2B,MAAM+B,OAAOG,OAAO,SAAAhF,GAAC,OAAIA,EAAEiF,OAAOC,SAASO,OAzBhD,QA4BZtE,EAAKgB,SAAS,CAACgB,SAAS,IA5BZ,yBAAA0C,EAAAtB,SAAAiB,MA8BK,gBAAAY,GAAA,OAAAb,EAAAH,MAAA9D,KAAA+D,YAAA,GAEjBlE,EAAK2B,MAAQ,CACXU,QAAS,GACT7C,SAAU,KACVwC,SAAS,EACT0B,OAAO,GACPmB,UAAW,GACXF,WAAW,GACXK,eAAe,GATAhF,uNA/KMkF,qBAErB5G,OAAO6G,SAASC,UAAU,CACxBC,OAAQ,eACRC,OAAQ,GACRC,QAAS,MACT9C,IAAI,IAAI+C,MAAOC,WAJjB,eAAAC,EAAAzF,OAAA2C,EAAA,EAAA3C,CAAA4C,EAAAhE,EAAAiE,KAKM,SAAA6C,EAAO5D,EAAOP,GAAd,OAAAqB,EAAAhE,EAAAmE,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,UACA1B,QAAQC,IAAIF,GACU,IAAlBA,EAAM,OAFV,CAAAoE,EAAAzC,KAAA,eAAAyC,EAAAzC,KAAA,EAGQ0C,EAAKC,WAHb,cAAAF,EAAAzC,KAAA,EAIQ0C,EAAKE,qBAJb,OAAAH,EAAAzC,KAAA,eAKO1B,QAAQC,IAAI,yCALnB,wBAAAkE,EAAAxC,SAAAuC,MALN,gBAAAK,EAAAC,GAAA,OAAAP,EAAAzB,MAAA9D,KAAA+D,YAAA,gPAeE5F,OAAO6G,gCACT7G,OAAO4H,KAAO,IAAIC,IAAK7H,OAAO6G,mBACxB7G,OAAO6G,SAASiB,sCACb9H,OAAO4H,KAChB5H,OAAO4H,KAAO,IAAIC,IAAK7H,OAAO4H,KAAKG,iBAEnC/H,OAAOgI,MAAM,iUAMTJ,EAAO5H,OAAO4H,cAMGA,EAAKK,IAAIC,4BAA1BC,SAGNtG,KAAKa,SAAS,CAAEqB,QAASoE,EAAS,KAElChF,QAAQC,IAAI,WAAYvB,KAAKwB,MAAMU,kBAGX6D,EAAKK,IAAIG,IAAIC,kBAA/BC,WAEAC,EAAWC,EAASC,SAASH,4BAGjCpH,EAAW,IAAI0G,EAAKK,IAAIS,SAASF,EAASG,IAAKJ,EAASK,SACxD/G,KAAKa,SAAS,CAAExB,uBAESA,EAASyC,QAAQ0C,aAAarE,eAAjDqE,SACNxE,KAAKa,SAAS,CAAC2D,eAENJ,EAAI,eAAGA,GAAII,qCACEnF,EAASyC,QAAQyB,OAAOa,GAAGjE,eAAzCkE,SACNrE,KAAKa,SAAS,CAAC0C,OAAM,GAAAoB,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAME,KAAKwB,MAAM+B,QAAjB,CAAyBc,cAFhBD,4BAMhCpE,KAAKa,SAAS,CAAC0C,OAAQvD,KAAKwB,MAAM+B,OAAOC,KAAK,SAAC9E,EAAE+E,GAAH,OAASA,EAAEnB,GAAK5D,EAAE4D,OAEhEhB,QAAQC,IAAI,cAAekF,GAC3BnF,QAAQC,IAAI,WAAYmF,EAASK,SACjC/G,KAAKa,SAAS,CAAEgB,SAAS,4BAEzB1D,OAAOgI,MAAM,0PA2Hf,IAAIa,EAASC,EAAAvI,EAAAC,cAACuI,EAAA,EAAD,CACX3D,OAAQvD,KAAKwB,MAAM+B,OACnBnD,YAAaJ,KAAKI,YAAY+G,KAAKnH,MACnCyB,YAAazB,KAAKyB,YAAY0F,KAAKnH,MACnCqC,cAAgBrC,KAAKqC,cAAc8E,KAAKnH,MACxCuC,UAAWvC,KAAKwB,MAAMe,UACtBW,UAAWlD,KAAKkD,UAAUiE,KAAKnH,MAC/BgE,YAAahE,KAAKgE,YAAYmD,KAAKnH,MACnCkC,QAASlC,KAAKwB,MAAMU,QACpB2C,cAAe7E,KAAKwB,MAAMqD,gBAG5B,OACEoC,EAAAvI,EAAAC,cAAA,WACEsI,EAAAvI,EAAAC,cAACyI,EAAA,EAAD,CAAQlF,QAASlC,KAAKwB,MAAMU,QAASyD,SAAW3F,KAAK2F,SAAUC,mBAAqB5F,KAAK4F,mBAAmBuB,KAAKnH,QAEjHiH,EAAAvI,EAAAC,cAAA,WACIqB,KAAKwB,MAAMK,QACXoF,EAAAvI,EAAAC,cAAA,OAAK0I,MAAO,CAACC,OAAQ,SAAUhF,GAAG,SAASiF,UAAU,gEAA+DN,EAAAvI,EAAAC,cAAC6I,EAAA,WAAD,OACpHR,WAnNMS,aA6NH7I,6LCxOT8I,2LAEK,IAAA7H,EAAAG,KACP,OACE2H,EAAAjJ,EAAAC,cAAA,OAAK4I,UAAU,+DACbI,EAAAjJ,EAAAC,cAAA,KACE4I,UAAU,sCACVK,KAAK,IACLC,IAAI,uBAEJF,EAAAjJ,EAAAC,cAAA,OAAKmJ,IAAKC,IAAQT,OAAO,KAAKC,UAAU,YAAYS,IAAI,KAL1D,aAQAL,EAAAjJ,EAAAC,cAAA,MAAI4I,UAAU,mBACVI,EAAAjJ,EAAAC,cAAA,MAAI4I,UAAU,uDACTvH,KAAKJ,MAAMsC,QACNyF,EAAAjJ,EAAAC,cAAAgJ,EAAAjJ,EAAAuJ,SAAA,KAAEN,EAAAjJ,EAAAC,cAAA,OACN4I,UAAU,OACVW,MAAM,KACNZ,OAAO,KACPQ,IAAG,yBAAAnD,OAA2B,IAAIwD,IAAUnI,KAAKJ,MAAMsC,QAAS,IAAIkG,YACpEJ,IAAI,KAAKL,EAAAjJ,EAAAC,cAAA,QAAM4I,UAAU,mBAAhB,MACNI,EAAAjJ,EAAAC,cAAA,YAAMgJ,EAAAjJ,EAAAC,cAAA,UACG4I,UAAU,gBACVc,QAAS,WACPxI,EAAKD,MAAM+F,WAAWzG,KAAtBY,OAAAwI,EAAA,EAAAxI,CAAAyI,EAAA7J,EAAAiE,KAA2B,SAAA6C,IAAA,OAAA+C,EAAA7J,EAAAmE,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EAAkBnD,EAAKD,MAAMgG,qBAA7B,cAAAH,EAAA+C,OAAA,SAAA/C,EAAAhB,MAAA,wBAAAgB,EAAAxC,SAAAuC,SAHhC,mBAWXmC,EAAAjJ,EAAAC,cAAA,SAAO4I,UAAU,kBAEbI,EAAAjJ,EAAAC,cAAA,SAAO2D,GAAG,UAAU+E,MAAO,CAACoB,MAAO,SAAUJ,QAAU,kBAAI/G,QAAQC,IAAI,QAAQvB,KAAKJ,MAAMsC,QAASlC,KAAKJ,MAAMsC,QAAS,eAnCtHuF,cA8CNC,2BCpDfgB,EAAAC,QAAiBC,EAAAC,EAAuB,yECkBpC7B,4MACE8B,sBAEJ,SAAAA,EAAYlJ,GAAO,IAAAC,EAAA,OAAAC,OAAAiJ,EAAA,EAAAjJ,CAAAE,KAAA8I,IACjBjJ,EAAAC,OAAAkJ,EAAA,EAAAlJ,CAAAE,KAAAF,OAAAmJ,EAAA,EAAAnJ,CAAAgJ,GAAA3I,KAAAH,KAAMJ,KACD4B,MAAQ,CACX0H,MAAM,EACNC,cAAc,EACdC,SAAU,SACVvE,cAAehF,EAAKD,MAAMiF,cAC1BwE,cAAexJ,EAAKD,MAAMsC,QAC1BoH,YAAY,EACZC,UAAW,QACXC,MAAO,SAVQ3J,wEAcV,IAAA6F,EAAA1F,KA0BDyJ,EAAgB,CACpBvB,MAAO,GACPZ,OAAQ,GACRoC,aAAc,KACdC,SAAU,SACVC,YAAa,EACbC,YAAa,QAmBf,OANA7C,EAAU8C,EAAApL,EAAAC,cAAA,WAAMqB,KAAKwB,MAAMqD,cACZiF,EAAApL,EAAAC,cAAA,UAAImL,EAAApL,EAAAC,cAAA,OACJ0I,MAAOoC,EACP3B,IAAG,yBAAAnD,OAA2B,IAAIwD,IAAUnI,KAAKwB,MAAM6H,cAAe,IAAIjB,YAC1EJ,IAAI,KAHJ,WAIA8B,EAAApL,EAAAC,cAAA,2BAGbmL,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,yBAAyBF,MAAO,CAAC0C,WAAY/J,KAAKwB,MAAMgI,QACrEM,EAAApL,EAAAC,cAAA,WACEmL,EAAApL,EAAAC,cAAA,WACEmL,EAAApL,EAAAC,cAACqL,EAAA,EAAD,CAAK3C,MAvDI,CACf4C,KAAM,GACNC,OAAQ,GACRC,SAAU,SAqDFC,aAAW,OACX/B,QAAS,kBAAI3C,EAAK7E,SAAS,CAACqI,MAAM,MAElCY,EAAApL,EAAAC,cAAC0L,EAAA3L,EAAD,QAGJoL,EAAApL,EAAAC,cAAA,WACEmL,EAAApL,EAAAC,cAACqL,EAAA,EAAD,CAAK3C,MA1DK,CAChB4C,KAAM,GACNC,OAAQ,GACRC,SAAU,SAwDFC,aAAW,OACX/B,QAAS,WACP3C,EAAK7E,SAAS,CAACwI,cAAe3D,EAAK9F,MAAMsC,UACzCwD,EAAK7E,SAAS,CAACgE,eAAe,IAC9Ba,EAAK9F,MAAMoE,YAAY,UAGzB8F,EAAApL,EAAAC,cAAC2L,EAAA5L,EAAD,QAGJoL,EAAApL,EAAAC,cAAA,WACEmL,EAAApL,EAAAC,cAACqL,EAAA,EAAD,CAAK3C,MAjEK,CAChB4C,KAAM,GACNC,OAAQ,IACRC,SAAU,SA+DFC,aAAW,UACX/B,QAAS,WACP3C,EAAK7E,SAAS,CAACwI,cAAe3D,EAAK9F,MAAMsC,UACzCwD,EAAK7E,SAAS,CAACgE,eAAe,IAC9Ba,EAAK9F,MAAMoE,YAAY0B,EAAK9F,MAAMsC,WAGpC4H,EAAApL,EAAAC,cAAA,OACI0I,MAAQoC,EACR3B,IAAG,yBAAAnD,OAA2B,IAAIwD,IAAUnI,KAAKJ,MAAMsC,QAAS,IAAIkG,YACpEJ,IAAI,OAGZ8B,EAAApL,EAAAC,cAAA,WACEmL,EAAApL,EAAAC,cAACqL,EAAA,EAAD,CAAK3C,MA3EK,CAChBkD,MAAO,GACPL,OAAQ,GACRC,SAAU,SAyEFC,aAAW,WACXI,KAAM,QACNnC,QAAS,WAvDjBlK,OAAOsM,SAAS,CACdC,IAAK,EACLC,SAAU,aAyDJb,EAAApL,EAAAC,cAACiM,EAAAlM,EAAD,QAGJoL,EAAApL,EAAAC,cAAA,WACEmL,EAAApL,EAAAC,cAACqL,EAAA,EAAD,CAAK3C,MAAOvH,OAAO+K,OAAO,GAjFhB,CAChBN,MAAO,GACPG,IAAK,GACLP,SAAU,SA8EqC,CAACJ,WAAY/J,KAAKwB,MAAMgI,MAAOK,YAAa,SACnFO,aAAW,cACXI,KAAM,QACNnC,QAAS,WACc,UAArB3C,EAAKlE,MAAMgI,MAEX9D,EAAK7E,SAAS,CAAC2I,MAAO,WAErB9D,EAAK7E,SAAS,CAAC2I,MAAO,eAQ/BM,EAAApL,EAAAC,cAAA,WACImL,EAAApL,EAAAC,cAACmM,EAAA,EAAD,CACE5B,KAAMlJ,KAAKwB,MAAM0H,KACjB6B,OAAQ,kBAAIrF,EAAK7E,SAAS,CAACqI,MAAM,KACjC8B,kBAAgB,gCAChBC,UAAQ,GACRnB,EAAApL,EAAAC,cAACmM,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvBrB,EAAApL,EAAAC,cAACmM,EAAA,EAAMM,MAAP,uBAEFtB,EAAApL,EAAAC,cAAA,QAAM0M,SAAU,SAAChL,GACbA,EAAMC,iBACN,IAAMoB,EAAcgE,EAAK4F,iBAAiB9I,MAC1CkD,EAAK9F,MAAM6B,YAAYC,KAEzBoI,EAAApL,EAAAC,cAACmM,EAAA,EAAMS,KAAP,KACEzB,EAAApL,EAAAC,cAAA,SACEgC,KAAK,OACL6K,OAAO,sDACPC,SAAUzL,KAAKJ,MAAMQ,cAEvB0J,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,sBACbuC,EAAApL,EAAAC,cAAA,WACAmL,EAAApL,EAAAC,cAAA,SACE2D,GAAK,mBACL3B,KAAO,OACP+K,IAAK,SAACC,GAAWjG,EAAK4F,iBAAmBK,GACzCpE,UAAU,eACVqE,YAAc,kBACdC,UAAQ,MAId/B,EAAApL,EAAAC,cAACmM,EAAA,EAAMgB,OAAP,KACEhC,EAAApL,EAAAC,cAACoN,EAAA,EAAD,CAAQC,QAAQ,YAAY3D,QAAS,kBAAI3C,EAAK7E,SAAS,CAACqI,MAAM,MAA9D,SAGAY,EAAApL,EAAAC,cAACoN,EAAA,EAAD,CAAQpL,KAAK,SAASqL,QAAQ,UAAU3D,QAAS,WACG3C,EAAK7E,SAAS,CAACqI,MAAM,MADzE,YAYVY,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,OACbuC,EAAApL,EAAAC,cAAA,QAAMsN,KAAK,OAAO1E,UAAU,4BAA4BF,MAAO,CAAE6E,SAAU,UACzEpC,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,2BACbuC,EAAApL,EAAAC,cAAA,iBACAmL,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,kBAAkBF,MAAO,CAAC8E,eAAe,kBACtDrC,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,QACZP,GAGH8C,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,mBACbuC,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,aAAYuC,EAAApL,EAAAC,cAAA,SAAO4I,UAAY,cAAnB,WAC3BuC,EAAApL,EAAAC,cAAA,WAEEmL,EAAApL,EAAAC,cAACyN,EAAA,EAAD,KACEtC,EAAApL,EAAAC,cAACyN,EAAA,EAASC,OAAV,CAAiBL,QAAQ,YAAY1J,GAAG,iBAAiB+E,MAAO,CAAEa,MAAO,UACpElI,KAAKwB,MAAM4H,UAEhBU,EAAApL,EAAAC,cAACyN,EAAA,EAASE,KAAV,KAnJI,CAAC,SAAU,WAAY,cAAe,gBAoJvBC,IAAI,SAACC,GACpB,OACE1C,EAAApL,EAAAC,cAACyN,EAAA,EAASK,KAAV,CACEC,IAAOF,EACPG,SAAY,WACVjH,EAAK7E,SAAS,CAACuI,SAAUoD,IACzB9G,EAAK9F,MAAMsD,UAAUsJ,KAGtBA,UAiBjB1C,EAAApL,EAAAC,cAAA,WACgC,UAA7BqB,KAAKwB,MAAMoL,cACV9C,EAAApL,EAAAC,cAACmM,EAAA,EAAD,CACF5B,KAAMlJ,KAAKwB,MAAM2H,aACjB4B,OAAQ,kBAAIrF,EAAK7E,SAAS,CAACsI,cAAc,KACzC6B,kBAAgB,gCAChBC,UAAQ,GACNnB,EAAApL,EAAAC,cAACmM,EAAA,EAAMS,KAAP,KACEzB,EAAApL,EAAAC,cAAA,KAAG4I,UAAU,oBACXuC,EAAApL,EAAAC,cAAA,OAAK0I,MAAO,CAAC6E,SAAU,SAAUpE,IAAG,+BAAAnD,OAAiC3E,KAAKwB,MAAMqL,gBAMrF/C,EAAApL,EAAAC,cAAA,WAEAqB,KAAKJ,MAAM2D,OAAOgJ,IAAI,SAAClI,EAAOqI,GAC7B,OACE5C,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,YAAYmF,IAAKA,GAG5B5C,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,cACbuF,YAAa,SAACzM,GAASA,EAAMG,OAAO6G,MAAM0F,OAAS,WACnD1E,QAAW,WACT3C,EAAK7E,SAAS,CAAEwI,cAAehF,EAAMV,SAEnC+B,EAAK7E,SAAS,CAACgE,eAAe,IAC9Ba,EAAK9F,MAAMoE,YAAYK,EAAMV,UAEjCmG,EAAApL,EAAAC,cAAA,OACE4I,UAAU,OACVW,MAAM,KACNZ,OAAO,KACPQ,IAAG,0BAAAnD,OAA4B,IAAIwD,IAAU9D,EAAMV,OAAQ,IAAIyE,cAGjE0B,EAAApL,EAAAC,cAAA,SAAO4I,UAAY,cACflD,EAAMV,SAKZmG,EAAApL,EAAAC,cAAA,MAAI2D,GAAG,YAAYiF,UAAU,+BAG3BuC,EAAApL,EAAAC,cAAA,MAAI4I,UAAU,mBACZuC,EAAApL,EAAAC,cAAA,OAAK4I,UAAU,YAAYc,QAAS,WAAK3C,EAAK7E,SAAS,CAACsI,cAAc,IAC5BzD,EAAK7E,SAAS,CAACgM,UAAWxI,EAAMtC,OAChC2D,EAAK7E,SAAS,CAAC+L,cAAevI,EAAM2I,WAE5ElD,EAAApL,EAAAC,cAAA,KAAG4I,UAAU,eAUO,UAAjBlD,EAAM2I,OACLlD,EAAApL,EAAAC,cAACsO,EAAA,cAAD,CAAe5F,MAAO,CAAC6E,SAAU,SAAWgB,OAAO,OAAOpF,IAAG,+BAAAnD,OAAiCN,EAAMtC,QAEtG+H,EAAApL,EAAAC,cAACwO,EAAAzO,EAAD,KAAUoL,EAAApL,EAAAC,cAAA,SACR4I,UAAU,+CACVO,IAAG,+BAAAnD,OAAiCN,EAAMtC,MAC1CsF,MAAO,CAAC6E,SAAU,SAClBkB,UAAQ,OAKdtD,EAAApL,EAAAC,cAAA,SAAI0F,EAAM3C,cAIZoI,EAAApL,EAAAC,cAAA,MAAI+N,IAAKA,EAAKnF,UAAU,wBACtBuC,EAAApL,EAAAC,cAAA,SAAO4I,UAAU,8BAAjB,SACSpJ,OAAO4H,KAAKsH,MAAMC,QAAQjJ,EAAM9B,UAAU6F,WAAY,SAD/D,QAGA0B,EAAApL,EAAAC,cAAA,UACE4I,UAAU,uCACVgG,KAAMlJ,EAAM/B,GACZ+F,QAAS,SAAChI,GACR,IAAIkC,EAAYpE,OAAO4H,KAAKsH,MAAMG,MAAM,MAAO,SAC/ClM,QAAQC,IAAIlB,EAAMG,OAAO+M,KAAMhL,GAC/BmD,EAAK9F,MAAMyC,cAAchC,EAAMG,OAAO+M,KAAMhL,KANhD,+BAnTTkF,cA6UJqB","file":"static/js/main.8a93e8a0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Identicon from 'identicon.js';\nimport './App.css';\nimport MetaGram from '../abis/Metagram.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nimport { BoxLoading } from 'react-loadingg';\n\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({host: 'ipfs.infura.io', port: 5001, protocol: 'https'})\n\nlet metaGram\n\nclass App extends Component {\n  async componentWillMount(){\n    // Connect automatically if MetaMask exists (and connected) and an account is already logged in \n    const provider = await detectEthereumProvider()\n    if(provider){\n      window.ethereum.sendAsync({\n        method: \"eth_accounts\",\n        params: [],\n        jsonrpc: \"2.0\",\n        id: new Date().getTime()\n        } , async (error, result) =>{\n            console.log(result);\n            if (result[\"result\"]!=\"\") {\n              await this.loadWeb3();\n              await this.loadBlockchainData();//addresses found. result[\"result\"] contains wallet address\n            }else {console.log(\"MetaMask account may not be connected\");}//found not address, which mean this wallet is not logged in\n        });\n    }\n  }\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\"Non-Ethereum browser detected. Try using MetaMask.\")\n    }\n    \n  }\n\n  async loadBlockchainData(){\n    const web3 = window.web3\n    // try{\n    //   const accounts = await web3.eth.getAccounts()\n    // }catch(e){\n    //   console.log(\"Loading error\")\n    // }\n    const accounts = await web3.eth.getAccounts()\n\n    \n    this.setState({ account: accounts[0] })\n\n    console.log(\"Account:\", this.state.account)\n\n    // Load Token contract //\n    const networkId = await web3.eth.net.getId()\n    // const address = MetaGram.networks['5777'].address\n    const metaData = MetaGram.networks[networkId]\n\n    if (metaData) {\n      metaGram = new web3.eth.Contract(MetaGram.abi, metaData.address)\n      this.setState({ metaGram })\n      \n      const imageCount = await metaGram.methods.imageCount().call()\n      this.setState({imageCount})\n\n      for( var i = 1; i<= imageCount; i++){\n        const image = await metaGram.methods.images(i).call()\n        this.setState({images: [...this.state.images, image]})\n      }\n\n      // Initial sort\n      this.setState({images: this.state.images.sort((a,b) => b.id - a.id)})\n\n      console.log(\"Network Id:\", networkId)\n      console.log(\"Address:\", metaData.address)\n      this.setState({ loading: false })\n    } else {\n      window.alert(\"Metagram contract not deployed on current network. Connect to specified network and refresh page.\")\n    \n    }\n  }\n\n  captureFile = (event) => {\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    // determine file type: image or video\n    var fileType = file.type.split('/')[0];\n    this.setState({fileFormat: fileType})\n\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () => {\n      this.setState({buffer: Buffer(reader.result)})\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  uploadImage = (description) => {\n    console.log(\"Submitting file to ipfs\")\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('IPFS result', result)\n      if(error){\n        console.error(error)\n        return\n      }\n      this.setState({loading: true})\n      this.state.metaGram.methods.uploadImage(result[0].hash, description, this.state.fileFormat)\n                                  .send({from: this.state.account})\n                                  .on('confirmation', (hash)=>{\n                                    this.setState({loading: false})\n                                  }).catch((error) =>{\n                                    this.setState({loading: false})\n                                    console.log(error)\n                                  })\n\n    })\n  }\n  tipImageOwner = (id, tipAmount) =>{\n    this.setState({loading: true})\n    this.state.metaGram.methods.tipImageOwner(id)\n                                .send({from: this.state.account , value: tipAmount})\n                                .on('confirmation', async () => {\n                                \n                                  this.setState({loading: false})\n                                  \n                                }).catch((error) =>{\n                                  this.setState({loading: false})\n                                })\n  }\n  sortPosts = async (sortState) => {\n    this.setState({loading: true})\n    \n    if (sortState === 'EARLIEST'){\n      this.setState({images: this.state.images.sort((a,b) => a.id - b.id)})\n    }else if(sortState === 'LATEST'){\n      this.setState({images: this.state.images.sort((a,b) => b.id - a.id)})\n    }else if(sortState === \"MOST TIPPED\"){\n      this.setState({\n        images: this.state.images.sort((a,b) => b.tipAmount - a.tipAmount)\n      })\n    }else if(sortState === \"LEAST TIPPED\"){\n      this.setState({\n        images: this.state.images.sort((a,b) => a.tipAmount - b.tipAmount)\n      })\n    }else if(sortState === \"Profile\"){\n\n      this.setState({\n        images: this.state.images.filter(a => a.author.includes(this.state.account))\n      })\n    }\n\n    this.setState({loading: false})\n  }\n\n  authorPosts = async (authorHash) =>{\n    this.setState({loading: true})\n    if (authorHash === \"HOME\"){\n      \n      for( var i = 1; i<= this.state.imageCount; i++){\n        const image = await metaGram.methods.images(i).call()\n        this.setState({imagesAlt: [...this.state.imagesAlt, image]})\n      }\n      this.setState({userPostState: false})\n      this.setState({images: this.state.imagesAlt})\n      this.setState({imagesAlt: []})\n      \n      this.setState({images: this.state.images.sort((a,b) => b.id - a.id)})\n\n    }else{\n      if (authorHash === this.state.account){\n        for( var i = 1; i<= this.state.imageCount; i++){\n          const image = await metaGram.methods.images(i).call()\n          this.setState({imagesAlt: [...this.state.imagesAlt, image]})\n        }\n        this.setState({userPostState: true})\n        this.setState({images: this.state.imagesAlt})\n        this.setState({imagesAlt: []})\n      }\n      this.setState({\n        images: this.state.images.filter(a => a.author.includes(authorHash))\n      })\n    }\n    this.setState({loading: false})\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      metaGram: null,\n      loading: true,\n      images:[],\n      imagesAlt: [],\n      imageCount:'',\n      userPostState: false\n    }\n  }\n\n  render() {\n    let content= <Main\n      images={this.state.images}\n      captureFile={this.captureFile.bind(this)}\n      uploadImage={this.uploadImage.bind(this)}\n      tipImageOwner= {this.tipImageOwner.bind(this)}\n      tipAmount={this.state.tipAmount}\n      sortPosts={this.sortPosts.bind(this)}\n      authorPosts={this.authorPosts.bind(this)}\n      account={this.state.account}\n      userPostState={this.state.userPostState}\n    />\n\n    return (\n      <div>\n        <Navbar account={this.state.account} loadWeb3= {this.loadWeb3} loadBlockchainData= {this.loadBlockchainData.bind(this)}/>\n      \n        <div>\n          { this.state.loading\n          ? <div style={{height: '100vh'}} id=\"loader\" className=\"text-center d-flex align-items-center justify-content-center\"><BoxLoading/></div>\n          : content\n          }\n          \n        </div>\n    \n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nimport mgLogo from '../mglogo.png'\nimport './App.css'\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\".\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={mgLogo} height=\"30\" className=\"mb-1 mr-2\" alt=\"\" />\n          Meta Gram\n        </a>\n        <ul className=\"navbar-nav px-3\">\n            <li className=\"navbar-item text-nowrap d-none d-sm-none d-sm-block\">\n                {this.props.account \n                    ? <><img\n                  className=\"mr-2\"\n                  width='30'\n                  height='30'\n                  src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n                  alt=\"\" /><span className=\"textshadow mr-1\">/</span></>\n                    :<span><button \n                              className=\"btn btn-light\"\n                              onClick={()=>{\n                                this.props.loadWeb3().then(async () => await this.props.loadBlockchainData())\n                              }}\n                              >\n                                Connect Wallet\n                            </button>\n                    </span>\n                }\n                \n                <small className=\"text-secondary\">\n                  \n                    <small id=\"account\" style={{color: 'white'}} onClick= {()=>console.log(\"Hi\")}>{this.props.account? this.props.account: \"\"}</small>\n                </small>\n\n                \n            </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","module.exports = __webpack_public_path__ + \"static/media/mglogo.a492d5d2.png\";","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Edit';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\n\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport LazyLoad from 'react-lazyload';\n\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n \n\nimport { Button, Modal, Dropdown } from 'react-bootstrap';\n\nimport './App.css'\nlet content\nclass Main extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      show: false,\n      showPicModal: false,\n      eventKey: 'LATEST',\n      userPostState: this.props.userPostState,\n      currentAuthor: this.props.account,\n      fabVisible: false,\n      playVideo: 'false',\n      theme: 'white'\n    }\n  }\n\n  render() {\n    const fabStyle = {\n      left: 20,\n      bottom: 20,\n      position: 'fixed'\n    };\n    const fabStyle2 = {\n      left: 20,\n      bottom: 90,\n      position: 'fixed'\n    };\n    const fabStyle3 = {\n      left: 20,\n      bottom: 160,\n      position: 'fixed'\n    };\n    const fabStyle4 = {\n      right: 20,\n      bottom: 20,\n      position: 'fixed'\n    };\n    const fabStyle5 = {\n      right: 20,\n      top: 50,\n      position: 'fixed'\n    };\n    const identiconStyle ={\n      width: 45,\n      height: 45,\n      borderRadius: 45 / 2,\n      overflow: \"hidden\",\n      borderWidth: 2,\n      borderColor: \"grey\"\n    }\n\n\n    var dropDownOptions = [\"LATEST\", \"EARLIEST\", \"MOST TIPPED\", \"LEAST TIPPED\"]\n    \n    const scrollToTop = () => {\n      window.scrollTo({\n        top: 0, \n        behavior: 'smooth'\n      });\n    }\n    \n    content = <div>{this.state.userPostState?\n                   <h2><img\n                   style={identiconStyle}\n                   src={`data:image/png;base64,${new Identicon(this.state.currentAuthor, 30).toString()}`}\n                   alt=\"\" />'s Gram</h2>: \n                   <h2>Today's Gram</h2>}</div>\n    return (\n      \n      <div className=\"container-fluid mt-4_3\" style={{background: this.state.theme}}>\n        <div>\n          <div>\n            <Fab style={fabStyle} \n              aria-label=\"edit\"\n              onClick={()=>this.setState({show: true})}\n              >\n              <EditIcon />\n            </Fab>\n          </div>\n          <div>\n            <Fab style={fabStyle2} \n              aria-label=\"home\"\n              onClick={()=>{\n                this.setState({currentAuthor: this.props.account})\n                this.setState({userPostState: false})\n                this.props.authorPosts(\"HOME\")\n              }}\n              >\n              <HomeIcon />\n            </Fab>\n          </div>\n          <div>\n            <Fab style={fabStyle3} \n              aria-label=\"profile\"\n              onClick={()=> {\n                this.setState({currentAuthor: this.props.account})\n                this.setState({userPostState: true})\n                this.props.authorPosts(this.props.account)\n              }}\n              >\n              <img\n                  style ={identiconStyle}\n                  src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n                  alt=\"\" />\n            </Fab>\n          </div>\n          <div>\n            <Fab style={fabStyle4} \n              aria-label=\"scrollup\"\n              size= \"small\"\n              onClick={()=> {\n                scrollToTop()\n              }}\n              >\n              <ArrowDropUpIcon/>\n            </Fab>\n          </div>\n          <div>\n            <Fab style={Object.assign({}, fabStyle5, {background: this.state.theme, borderColor: \"grey\"})} \n              aria-label=\"toggleTheme\"\n              size= \"small\"\n              onClick={()=> {\n                this.state.theme === \"white\" \n                ? \n                this.setState({theme: 'orange'})\n                \n                :this.setState({theme: 'white'})\n              }}>\n            </Fab>\n          </div>\n\n          \n        </div>\n        \n        <div>\n            <Modal \n              show={this.state.show} \n              onHide={()=>this.setState({show: false})}\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered>\n              <Modal.Header closeButton>\n                <Modal.Title>Share Content</Modal.Title>\n              </Modal.Header>\n              <form onSubmit={(event) => {\n                  event.preventDefault()\n                  const description = this.imageDescription.value\n                  this.props.uploadImage(description)\n              }}>\n                <Modal.Body>\n                  <input\n                    type=\"file\"\n                    accept=\".jpg, .jpeg, .png, .bmp, .gif, .mp4, .mkv, .gg .wmv\"\n                    onChange={this.props.captureFile}/>\n\n                  <div className=\"form-group mr-sm-2\">\n                    <br></br>\n                    <input\n                      id = \"imageDescription\"\n                      type = \"text\"\n                      ref={(input) => {this.imageDescription = input}}\n                      className=\"form-control\"\n                      placeholder = \"Type something?\"\n                      required />\n                  </div>\n                </Modal.Body>\n                \n                <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={()=>this.setState({show: false})}>\n                    Close\n                  </Button>\n                  <Button type=\"submit\" variant=\"primary\" onClick={()=>{\n                                                                      this.setState({show: false})\n                                                                      }}>\n                    Post\n                  </Button>\n                </Modal.Footer>\n\n              </form>\n              \n              \n            </Modal>\n        </div>\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\n            <div className=\"content mr-auto ml-auto\">\n              <p>&nbsp;</p>\n              <div className=\"d-flex flex-row\" style={{justifyContent:\"space-between\"}}>\n                <div className=\"mt-1\">\n                  {content}\n                  \n                </div>\n                <div className=\"d-flex flex-row\"> \n                  <div className=\"mt-3 mr-2\"><small className = \"text-muted\">SORTBY</small></div>\n                  <div>\n                    \n                    <Dropdown>\n                      <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\" style={{ width: '140px' }}>\n                          {this.state.eventKey}\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu >\n                        {dropDownOptions.map((option) => {\n                          return (\n                            <Dropdown.Item\n                              key = {option}\n                              onSelect = {()=> {\n                                this.setState({eventKey: option})\n                                this.props.sortPosts(option)\n                              }}\n                              >\n                              {option}\n                            </Dropdown.Item>\n                          )\n                        })}\n                          \n                        \n                        {/* <Dropdown.Item href=\"#/action-1\">EARLIEST</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-1\">LATEST</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-2\">MOST TIPPED</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-3\">LEAST TIPPED</Dropdown.Item> */}\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                  \n                </div>\n              </div>\n                        {/* Checkpoint */}\n              <div>\n                {this.state.contentFormat === \"image\"\n                ? <Modal\n                show={this.state.showPicModal}\n                onHide={()=>this.setState({showPicModal: false})}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n                  <Modal.Body>\n                    <p className=\"text-center mt-2\">\n                      <img style={{maxWidth: '450px'}} src={`https://ipfs.infura.io/ipfs/${this.state.imageHash}`}/>\n                      \n                    </p>\n                  </Modal.Body>\n                \n                </Modal>\n                :<p></p>}\n              </div>\n                {this.props.images.map((image, key) => {\n                  return(\n                    <div className=\"card mb-4\" key={key}>\n\n                      {/* Uploader */}\n                        <div className=\"card-header\" \n                          onMouseOver={(event)=>{event.target.style.cursor = \"pointer\"}}\n                          onClick = {() => {\n                            this.setState({ currentAuthor: image.author})\n                \n                              this.setState({userPostState: true})\n                              this.props.authorPosts(image.author)}}\n                          >\n                          <img\n                            className=\"mr-2\"\n                            width=\"30\"\n                            height=\"30\"\n                            src={`data:image/png;base64, ${new Identicon(image.author, 30).toString()}`}\n                          />\n\n                          <small className = \"text-muted\"\n                            >{image.author}\n                          </small>\n                          \n                        </div>\n                        \n                        <ul id=\"imageList\" className=\"list-group list-group-flush\">\n\n                          {/* Show content image or video */}\n                          <li className=\"list-group-item\">\n                            <div className=\"pic-hover\" onClick={()=>{this.setState({showPicModal: true})\n                                                                      this.setState({imageHash: image.hash})\n                                                                      this.setState({contentFormat: image.format})\n                                                                      }}>\n                              <p className=\"text-center\">\n                                {/* {image.format === \"image\"\n                                ? <img src={`https://ipfs.infura.io/ipfs/${image.hash}`} style={{maxWidth: '420px'}}/>\n                                : \n                                <video \n                                  className=\"embed-responsive embed-responsive-16by9 ml-1\" \n                                  src={`https://ipfs.infura.io/ipfs/${image.hash}`} \n                                  style={{maxWidth: '420px'}}                                  \n                                  controls>\n                                </video>} */}\n                                {image.format === \"image\"\n                                ? <LazyLoadImage style={{maxWidth: '420px'}}  effect=\"blur\" src={`https://ipfs.infura.io/ipfs/${image.hash}`}/>\n                                : \n                                <LazyLoad><video \n                                  className=\"embed-responsive embed-responsive-16by9 ml-1\" \n                                  src={`https://ipfs.infura.io/ipfs/${image.hash}`} \n                                  style={{maxWidth: '420px'}}                                  \n                                  controls>\n                                </video></LazyLoad>}\n                              </p>\n                            </div>\n              \n                            <p>{image.description}</p>\n                          </li>\n                          \n                          {/* Tipping */}\n                          <li key={key} className=\"list-group-item py-2\">\n                            <small className=\"float-left mt-1 text-muted\">\n                              TIPS: {window.web3.utils.fromWei(image.tipAmount.toString(), 'ether')} ETH\n                            </small>\n                            <button\n                              className=\"btn btn-link btn-sm float-right pt-0\"\n                              name={image.id}\n                              onClick={(event) => {\n                                let tipAmount = window.web3.utils.toWei('0.1', \"ether\")\n                                console.log(event.target.name, tipAmount)\n                                this.props.tipImageOwner(event.target.name, tipAmount)\n                              }}>\n                              TIP 0.1 ETH\n                            </button>\n                          </li>\n\n                        </ul>\n\n                    </div>\n                  )\n                })}\n\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;"],"sourceRoot":""}